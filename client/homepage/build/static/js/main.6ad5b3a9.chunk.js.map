{"version":3,"sources":["components/frames/infoblocks-frame.jsx","components/infoblock.jsx","components/frames/aboutme-frame.jsx","components/greetingbox.jsx","components/avatar.jsx","pages/homepage.jsx","serviceWorker.js","index.js"],"names":["InfoblocksFrame","react_default","a","createElement","Grid","doubling","stackable","textAlign","columns","this","props","children","Component","Infoblock","Column","Segment","className","data-position","data-variation","href","target","Icon","name","iconClass","infoText","AboutMeFrame","Row","GreetingBox","mobile","tablet","computer","Header","as","Divider","horizontal","basic","Avatar","only","Image","avatar","size","src","Homepage","Container","aboutme_frame","greetingbox","infoblocks_frame","infoblock","qckDesc","qckDesk","Boolean","window","location","hostname","match","ReactDOM","render","homepage","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ad5b3a9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nclass InfoblocksFrame extends Component {\n  render() {\n    return (\n      <Grid doubling stackable textAlign=\"center\" columns={3}>\n        { this.props.children }\n      </Grid>\n    );\n  }\n}\n\nexport default InfoblocksFrame;","import React, { Component } from 'react';\nimport { Grid, Segment, Icon, } from 'semantic-ui-react';\n\nclass Infoblock extends Component {\n  render() {\n    return (\n      <Grid.Column>\n        <Segment>\n          <a className=\"ui header\" data-position=\"top center\"\n             data-variation=\"small\" href={ this.props.href } \n             target={ this.props.target }>\n            <Icon name={ this.props.iconClass }/> { this.props.infoText }\n          </a>\n        </Segment>\n      </Grid.Column>\n    );\n  }\n}\n\nexport default Infoblock;","import React, { Component } from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nclass AboutMeFrame extends Component {\n  render() {\n    return (\n      <Grid>\n        <Grid.Row>\n          { this.props.children }\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nexport default AboutMeFrame;","import React, { Component } from 'react';\nimport { Grid, Header, Divider, Segment } from 'semantic-ui-react';\n\nclass GreetingBox extends Component {\n  render() {\n    return (\n      <Grid.Column mobile={16} tablet={12} computer={13}>\n        <Header textAlign=\"center\" as='h1'>{ this.props.name }</Header>\n        <Divider horizontal ><Header as=\"h5\">About Me</Header></Divider>\n        <Segment basic>\n          <p>Hello and welcome to my home page! My name is Zach and I am a frontend\n            software engineer at eBay. I majored in Computer Science with an emphasis in cybersecurity at Santa Clara\n            University. I enjoy movies, gaming, fitness, and coding. Feel free to click the links below to learn more\n            about me!</p>\n        </Segment>\n      </Grid.Column>\n    );\n  }\n}\n\nexport default GreetingBox;\n","import React, { Component } from 'react';\nimport { Grid, Image } from 'semantic-ui-react';\n\nclass Avatar extends Component {\n  render() {\n    return (\n      <Grid.Column only=\"tablet computer\" tablet={4} computer={3}>\n        <Image avatar size=\"small\" src={ this.props.src } />\n      </Grid.Column>\n    );\n  }\n}\n\nexport default Avatar;","import React, { Component } from 'react';\nimport InfoblocksFrame from '../components/frames/infoblocks-frame';\nimport Infoblock from '../components/infoblock';\nimport AboutMeFrame from \"../components/frames/aboutme-frame\";\nimport GreetingBox from \"../components/greetingbox\";\nimport Avatar from \"../components/avatar\";\n\nimport { Container, Divider } from 'semantic-ui-react'\n\nclass Homepage extends Component {\n  render() {\n    const avatarPic = \"images/zachary-graham-pic.jpeg\";\n    const name = \"Zachary R. Graham\";\n    return (\n      <Container>\n        <br/>\n        <AboutMeFrame>\n          <Avatar src={avatarPic}/>\n          <GreetingBox name={name}/>\n        </AboutMeFrame>\n        <Divider />\n        <InfoblocksFrame>\n          <Infoblock target=\"_blank\" href=\"https://www.scu.edu\" qckDesc=\"My Alma Mater\" iconClass=\"university\" infoText=\"SCU\" />\n          <Infoblock href=\"mailto:zgraham@scu.edu\" qckDesc=\"Email Me\" iconClass=\"mail\" infoText=\"zgraham@scu.edu\" />\n          <Infoblock target=\"_blank\" href=\"https://github.com/zgrahambo\" qckDesc=\"My Github\" iconClass=\"github\" infoText=\"zgrahambo\" />\n          <Infoblock href=\"javascript:void(0)\" qckDesc=\"Home\" iconClass=\"home\" infoText=\"Santa Clara, CA\" />\n          <Infoblock target=\"_blank\" href=\"documents/Zachary_Graham_Resume_2019.pdf\" qckDesc=\"My Resume\" iconClass=\"file pdf outline\" infoText=\"Resume\" />\n          <Infoblock target=\"_blank\" href=\"https://www.ebay.com\" qckDesc=\"My Workplace\" iconClass=\"suitcase\" infoText=\"eBay\" />\n          <Infoblock target=\"_blank\" href=\"https://www.linkedin.com/in/zachary-graham-778b10180\" iconClass=\"linkedin\" qckDesk=\"LinkedIn\" infoText=\"LinkedIn\"/>\n          <Infoblock href=\"/spa\" qckDesc=\"Spotify Playlist Analyzer\" iconClass=\"spotify\" infoText=\"Spotify Playlist Analyzer\" />\n        </InfoblocksFrame>\n      </Container>\n    );\n  }\n}\n\nexport default Homepage;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport Homepage from './pages/homepage';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Homepage/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}